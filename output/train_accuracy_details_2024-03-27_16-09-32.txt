output:tensor([0.4770], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5275], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.,
        0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4867], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5312], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4542], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5540], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5564], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4805], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4604], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5505], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6156], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5840], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5317], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4500], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4144], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4667], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6673], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3693], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5040], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6027], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5260], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4253], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5706], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6344], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6084], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5133], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4809], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4992], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4798], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0.,
        1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5217], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5595], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4754], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.,
        0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3815], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5110], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4380], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6107], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4855], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5255], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4135], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5321], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3629], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5770], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5031], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4987], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4604], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4376], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3716], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5805], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4962], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4515], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5036], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5042], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6215], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5205], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4495], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6063], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4411], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5120], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4825], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4934], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3869], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4601], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5230], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5075], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5526], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7642], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4653], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3105], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6245], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4395], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3074], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2590], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7772], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3531], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3952], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3399], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5541], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4171], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3559], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5124], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7496], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4756], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5189], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6116], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5410], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5523], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3954], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2014], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4688], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4237], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7150], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5625], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2234], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5234], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5184], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5557], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3434], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6292], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3662], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6136], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5744], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3699], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4133], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5564], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2373], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6143], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4220], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5121], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5184], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6468], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5216], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4791], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6237], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3586], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5103], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6622], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2086], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3535], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7387], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.,
        1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1672], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7571], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5914], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2606], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3670], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7259], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3979], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5516], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2077], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2530], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5606], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4264], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5330], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2733], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3761], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4211], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6691], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.,
        0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3996], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4785], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6696], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2054], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4831], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2090], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1407], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7461], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6834], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3089], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4200], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0.,
        0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3666], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4644], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9192], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4679], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3198], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2179], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1875], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4625], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8401], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5303], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4560], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1969], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5224], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8186], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1608], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1662], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3826], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3833], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3277], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2768], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1.,
        1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5753], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1028], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5910], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4868], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4673], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5938], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1422], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2844], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4383], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2805], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1879], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4189], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4774], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4629], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2472], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2082], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8388], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2835], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6681], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3487], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7809], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2259], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6320], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1197], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4668], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8552], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7757], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4334], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3070], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5184], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2055], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6738], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2837], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2490], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3205], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.,
        1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5673], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6071], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6833], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5020], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3632], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7788], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9071], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3616], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7055], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5991], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4206], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6089], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6513], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6169], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7232], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4994], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4152], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2976], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4218], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1283], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2528], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6711], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5827], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3734], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3498], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4737], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2516], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3337], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4299], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6366], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0.,
        1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0705], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3686], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7693], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2185], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3714], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6255], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3299], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5369], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2455], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9147], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9215], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2108], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2825], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8384], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0.,
        0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5169], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9424], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
Epoch 1/50, Train Loss: 180.8445, Train Accuracy: 0.4973
output:tensor([0.5055], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3080], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6107], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5728], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2708], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8568], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4472], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4081], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7090], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1588], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3408], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7086], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5308], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2970], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4860], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0430], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2427], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1079], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0582], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2261], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4560], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6760], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1712], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8141], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2109], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2303], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1095], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9227], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2969], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6274], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0916], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3192], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4249], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3087], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0497], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7476], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2493], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6089], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8025], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3195], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5351], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9491], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7547], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3022], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6440], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4310], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4351], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0674], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1186], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0195], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6412], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0868], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3726], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0797], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6349], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5637], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8988], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2123], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2996], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3380], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6402], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0717], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3350], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4148], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7932], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5101], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7204], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8960], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7894], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3870], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4038], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6909], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0273], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1932], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4537], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4566], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3226], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1726], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3892], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7030], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2050], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7383], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6278], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0979], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1102], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5832], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1329], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5168], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4837], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9597], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4171], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2223], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8897], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6118], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2551], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3936], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8019], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5535], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1839], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9531], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8063], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7818], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7013], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3002], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6643], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2476], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1041], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1402], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4533], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1803], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9689], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3155], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5795], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3297], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6666], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6059], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0926], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3107], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7923], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2835], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0563], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8034], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2483], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5940], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9515], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1194], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4070], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8300], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1393], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5985], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9197], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7668], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4841], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8288], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1462], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3890], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5348], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3428], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2387], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8355], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1993], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1047], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7974], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8173], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5899], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9656], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1765], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4040], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9524], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5866], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7872], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2879], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5138], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5107], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9351], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9197], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7427], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4914], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3578], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1.,
        0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9757], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2241], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5697], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0254], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0063], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5132], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6919], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9299], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2590], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0690], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2924], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7766], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3364], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6007], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8900], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5784], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7128], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1107], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8601], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5324], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8026], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2882], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9003], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9687], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8746], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9218], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5504], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6027], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5597], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0755], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1074], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8568], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5864], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5657], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9936], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5074], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0437], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5635], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1850], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5118], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3469], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2428], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1.,
        0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9073], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8807], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9727], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3900], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7247], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8612], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3302], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1602], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7600], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9548], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1898], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1570], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7794], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8132], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6291], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6888], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3013], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7515], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7956], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3452], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.,
        1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5246], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5801], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5361], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3498], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1918], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5218], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0768], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7978], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5362], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5783], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8875], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7314], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4678], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8047], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5987], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7552], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2970], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4755], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4719], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2998], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5573], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8701], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6653], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3769], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0299], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9686], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3827], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3013], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9346], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
Epoch 2/50, Train Loss: 177.2251, Train Accuracy: 0.4905
output:tensor([0.9839], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5500], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4660], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3562], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7799], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4395], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3998], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7539], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8752], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8740], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9022], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7492], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2399], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7151], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8806], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5229], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7187], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8253], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8181], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1058], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1118], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1123], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7097], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6328], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3934], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9525], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6717], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9545], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6511], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5658], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5649], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4133], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8540], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9242], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1.,
        0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4880], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3538], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5689], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3061], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5429], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0.,
        0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2133], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3694], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6239], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5625], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5514], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1897], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0922], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1759], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2754], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6958], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3393], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2232], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8641], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6360], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1509], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2641], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4738], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8152], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2588], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1253], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9467], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5703], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1163], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3113], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1515], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6730], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3820], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7361], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5096], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6938], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3829], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7295], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5175], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1.,
        0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0792], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3723], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5236], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4975], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3314], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0563], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8834], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0775], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1627], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5674], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0698], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7412], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8587], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7598], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0419], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5464], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9159], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5234], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5885], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3322], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2181], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3067], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4203], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1911], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6019], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7060], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9420], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0727], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5482], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3809], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0625], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5695], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0779], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5835], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6643], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5414], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1634], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9804], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9406], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1671], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3206], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3863], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7568], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6489], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8430], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9384], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5012], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3164], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3700], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4832], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2000], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1124], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7678], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8943], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8785], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7098], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1601], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8386], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9627], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0792], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6250], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3113], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7702], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6592], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8869], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0354], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3735], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0884], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9170], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7694], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6377], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1059], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1753], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8334], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1640], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5858], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1960], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1606], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6047], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3100], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1664], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2393], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7081], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2350], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8703], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1.,
        1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9545], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3203], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5620], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0760], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4377], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3795], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9071], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8427], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1973], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4971], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.,
        1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8419], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0997], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4359], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0959], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4669], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8232], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9863], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0150], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9325], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6791], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9869], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8199], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6104], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6488], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6091], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1551], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8430], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6564], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3852], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1.,
        1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4337], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2754], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6278], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5462], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8460], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6709], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9125], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0171], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5722], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8101], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2629], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4564], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2900], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2806], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8246], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4896], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8749], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9220], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0303], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4827], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9804], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2349], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6391], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3507], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6178], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3305], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7076], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8759], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0509], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7563], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9881], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2150], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6216], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0524], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3488], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1860], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7499], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0.,
        0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5315], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9367], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2118], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9215], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2602], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8863], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3506], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0232], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0234], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9967], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6376], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1745], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5667], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2598], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8682], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1194], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4370], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3825], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6533], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4410], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4253], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0.,
        1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9038], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3461], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9172], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0487], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5262], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8986], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
Epoch 3/50, Train Loss: 190.9920, Train Accuracy: 0.5002
output:tensor([0.2135], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3845], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8841], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7100], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9451], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2095], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9288], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3968], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2137], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0560], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0421], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3530], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3221], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8113], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6003], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1804], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5906], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6930], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4140], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8489], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.,
        0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0138], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1876], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3507], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9656], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1752], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4968], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9010], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0332], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4006], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9322], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0233], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2704], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1746], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0847], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0690], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3163], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6164], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3945], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2805], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8032], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6321], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8146], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1882], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8478], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0096], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6817], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6264], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2102], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2245], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2889], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7912], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7370], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3212], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9134], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7253], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4722], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2412], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7549], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1117], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3012], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6100], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3792], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7055], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0817], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2589], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4699], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8859], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1096], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8973], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1932], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3432], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4109], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1628], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8346], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6864], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0419], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6633], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7110], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1950], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4364], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1084], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9458], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0748], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4193], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8020], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0778], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9661], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2610], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8599], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5729], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5516], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7661], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4621], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6526], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9621], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9693], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9072], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1356], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9427], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2026], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4331], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3460], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7298], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5967], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4384], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3771], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5013], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1907], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9393], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0.,
        0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7293], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9178], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4148], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9662], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0.,
        1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8969], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6929], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0569], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3988], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9288], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3977], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4583], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0785], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5359], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0099], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4116], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6177], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3229], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8277], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5029], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2723], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1532], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.,
        0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9400], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7085], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9467], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5667], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1946], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8904], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4879], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3329], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8258], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1709], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6774], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0541], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2563], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1451], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1.,
        0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4161], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8928], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4214], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3729], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6859], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7391], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5460], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1120], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7484], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7180], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1902], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3258], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5301], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3481], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7292], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4415], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5302], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5247], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5949], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7063], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8061], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3592], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4474], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7637], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8423], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8583], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9783], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6206], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8383], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0859], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2031], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8208], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6371], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3678], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6897], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7859], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2436], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4662], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1685], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8537], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4950], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0689], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4455], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6047], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6405], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1480], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1219], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2980], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7067], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5007], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7465], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1110], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1838], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5598], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4764], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2713], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2627], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2510], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4246], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3970], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5443], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5231], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8441], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5936], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7919], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2798], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1742], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7243], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0451], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5900], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4900], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6872], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2165], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4461], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4247], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.,
        0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3310], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1614], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3914], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5206], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5086], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4121], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2573], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7887], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1941], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6525], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2761], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5081], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4731], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3728], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3130], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6473], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4875], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5547], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4784], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4077], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7351], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1377], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2709], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5740], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3291], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4493], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7083], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6254], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5938], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7678], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3803], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
Epoch 4/50, Train Loss: 182.4040, Train Accuracy: 0.5075
output:tensor([0.8791], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9193], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5496], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0.,
        1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6844], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3314], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4422], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6644], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1356], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8101], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3942], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2723], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4726], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2953], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7823], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5913], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6934], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2865], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3832], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7809], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5096], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6407], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6461], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2207], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2676], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1312], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3373], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5140], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5568], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6656], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5103], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7401], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5032], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6698], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5288], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6999], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7672], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5609], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2562], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2754], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8949], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2355], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1870], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7295], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2506], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7786], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0.,
        1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1767], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2866], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1838], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7014], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5234], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8066], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0.,
        0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5591], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7212], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3255], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5059], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3490], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2557], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5337], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4385], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2124], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3667], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2522], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1662], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6783], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6762], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2550], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4018], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4460], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4474], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5091], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3105], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3890], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5991], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8869], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1156], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4960], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9440], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6981], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8706], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8050], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1680], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6061], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2035], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7548], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6221], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5864], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4470], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4485], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5421], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8897], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2137], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4876], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2275], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5571], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5751], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1974], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4064], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3250], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6091], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4400], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1857], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2221], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0414], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3738], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4237], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4781], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8337], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3919], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8718], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6366], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7939], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3433], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1738], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2151], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2837], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3593], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2944], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7737], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7097], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1413], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6747], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2550], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6879], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6162], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5198], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6567], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4272], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6512], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3897], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1491], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7140], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2934], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4885], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3982], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3008], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5149], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6299], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5316], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5584], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3378], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3158], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6425], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5405], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3329], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6712], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7725], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1628], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3879], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5032], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8187], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6306], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7331], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5048], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1265], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5200], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5829], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4414], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3200], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6392], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8271], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4592], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7004], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4809], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2442], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0.,
        0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5310], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1195], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4964], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8376], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7004], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6283], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1742], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4347], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4532], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7238], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3398], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4627], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3464], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3131], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5624], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3580], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6536], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2759], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5954], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3489], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5389], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2370], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1990], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6725], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4009], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4277], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0.,
        0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3878], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6950], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5320], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6011], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1856], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2926], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5011], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5448], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5819], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6002], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3073], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3236], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6133], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8909], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5222], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8911], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4675], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4049], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6035], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5326], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2232], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4644], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5351], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8985], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5973], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3745], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2910], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3880], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1613], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3133], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2805], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1543], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6016], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5939], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7332], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2127], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3265], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6726], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6829], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2889], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4294], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2250], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8042], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7106], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3788], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8923], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4033], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6673], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4460], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4306], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2653], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6074], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3828], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4100], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3478], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4360], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4944], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1541], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5661], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5962], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
Epoch 5/50, Train Loss: 189.8096, Train Accuracy: 0.4973
output:tensor([0.1717], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5315], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4025], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1801], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1754], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2582], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2516], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4669], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4719], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4608], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4887], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2230], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6940], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4495], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9323], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5628], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8496], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3927], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5770], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5418], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4350], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0.,
        0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4134], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4297], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6719], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6036], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0964], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1695], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0832], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7039], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6398], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5055], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8180], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1739], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5533], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1425], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2976], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2383], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3555], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6626], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5833], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8359], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7071], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5207], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7192], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5355], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1906], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4619], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2577], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5294], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2796], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5069], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2524], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1178], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4135], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1710], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3518], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5020], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0408], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4074], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6215], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3668], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6076], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1609], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8746], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7057], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7147], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1031], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9145], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4993], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7034], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8695], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5299], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8375], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7494], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6881], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2107], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1879], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5043], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6862], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3632], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9022], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3865], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4572], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2688], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3759], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8037], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7744], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4477], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3504], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3994], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6256], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3854], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8059], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6015], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2812], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7225], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3246], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7845], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3368], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4227], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5056], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6706], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6286], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7227], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6518], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4585], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2947], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7292], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7281], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.,
        1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6309], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3092], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4535], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6058], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4719], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6464], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5531], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6488], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1153], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1107], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5421], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8093], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5667], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7031], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4717], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4140], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0716], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1593], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7403], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1880], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7220], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7117], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6605], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4618], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6787], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8237], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5538], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5092], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1156], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3916], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3240], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3635], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5753], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0907], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6575], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3187], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9186], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4206], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5407], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4137], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5374], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2598], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4164], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5233], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4857], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4957], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5722], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2708], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3708], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5954], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5017], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6358], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6679], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7244], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7175], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4317], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6899], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2132], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4347], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5329], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4922], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4109], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3763], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2930], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3968], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1827], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3456], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3810], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6988], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6122], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7836], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2357], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3102], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7647], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5382], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4168], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7734], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0.,
        1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3427], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8549], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5324], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4269], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6754], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7921], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6763], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4071], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5209], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2514], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4765], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5694], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2219], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4549], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3053], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2566], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6614], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5977], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6792], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7168], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1889], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4080], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6174], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8020], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8139], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7559], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5669], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6214], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9112], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9114], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5255], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6642], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6251], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8271], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5132], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0.,
        1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4937], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1981], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5640], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4527], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3056], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0.,
        0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3762], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2291], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9059], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4969], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7072], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1781], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3434], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5971], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5367], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7441], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6164], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5376], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7694], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7040], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7828], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6201], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4158], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8991], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4486], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7139], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3345], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3365], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
Epoch 6/50, Train Loss: 174.3442, Train Accuracy: 0.4945
output:tensor([0.4136], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4956], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1612], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5818], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7741], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4241], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7028], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5004], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1414], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1403], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5033], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4523], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5879], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7113], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4004], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1728], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4976], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1604], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6151], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8447], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1204], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3582], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2154], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7804], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6854], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3672], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4560], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8799], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2502], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2511], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4445], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4598], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5485], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4287], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5983], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6524], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1296], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5733], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3919], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5170], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4741], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1260], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0954], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4152], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3591], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5661], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2981], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8842], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5573], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4099], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1.,
        0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0745], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4029], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6181], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6143], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4747], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6907], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1174], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7027], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6636], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5121], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8254], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1973], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2164], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2913], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2011], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7197], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1930], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7003], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3269], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6390], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4868], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4880], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5297], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1962], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1615], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6539], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2672], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2867], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6873], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3630], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6160], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1012], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3324], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7949], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2969], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5908], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6184], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6439], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5805], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3710], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6262], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0714], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3008], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2153], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5887], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0.,
        1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6026], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8076], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5257], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6474], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6677], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3621], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2735], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3679], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4265], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6455], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3015], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5664], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6050], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4705], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8173], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1673], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1552], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5533], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0543], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6952], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2627], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6356], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9210], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5664], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6264], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9056], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2074], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4313], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9109], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4114], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1408], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2359], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6143], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7294], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1147], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1665], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2193], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7973], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2334], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5924], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5639], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7478], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0948], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2755], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7368], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4727], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5838], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1.,
        0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9494], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4426], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6575], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3597], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1913], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8718], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8321], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1734], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7923], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0729], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8034], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2253], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2339], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7988], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4282], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6314], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3563], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5139], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5388], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6499], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3411], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4766], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7110], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6776], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4185], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8770], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4084], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3365], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3766], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7007], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1028], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0509], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1108], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2564], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2845], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4573], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2513], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4126], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1845], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4917], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4227], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4204], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.0883], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2858], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4262], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4705], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6418], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6544], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4508], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4460], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9239], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7246], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5390], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6158], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6603], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7004], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1439], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3230], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8269], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4685], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7479], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6563], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1820], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4854], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3967], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5921], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3011], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4830], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4026], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7967], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3375], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5014], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8437], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3585], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8117], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4604], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6397], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6818], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2258], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2134], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8632], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3408], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5036], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2391], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6030], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6044], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4511], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7247], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7865], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6012], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0.,
        1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4728], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8689], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4077], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3767], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0650], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4570], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4470], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4645], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4001], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4310], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9020], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3015], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0.,
        0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5103], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2419], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2708], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4227], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5956], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6563], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
Epoch 7/50, Train Loss: 181.1478, Train Accuracy: 0.4975
output:tensor([0.4132], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6191], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3479], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1643], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1.,
        0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8256], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6977], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7195], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1889], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9006], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7836], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4679], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0615], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2760], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9787], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2556], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5448], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1817], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5960], grad_fn=<SelectBackward0>)

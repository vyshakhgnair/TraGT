output:tensor([0.5037], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5404], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4869], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4861], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4671], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5210], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4718], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4809], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4654], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6029], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5604], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5989], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4991], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4421], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4065], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3826], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6621], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4004], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4571], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4061], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5784], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6173], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5568], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5790], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4659], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4142], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4088], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5258], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5816], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4014], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4543], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4809], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4387], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5409], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4609], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4479], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5458], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5567], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6134], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2891], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6199], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5853], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3234], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0.,
        0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2822], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5673], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6205], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4166], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6205], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5007], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5438], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4435], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4565], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6360], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6304], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5914], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3110], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4235], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2883], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5564], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4363], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5024], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5675], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5901], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6038], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5878], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4008], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4912], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4017], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4666], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5935], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7180], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4311], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6215], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5440], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2602], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4010], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4109], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4091], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6055], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5577], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4113], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5261], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6757], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6524], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5003], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6738], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4744], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5643], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0.,
        0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5232], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5934], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4577], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4783], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4888], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0.,
        1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4382], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3136], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3413], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5176], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4045], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4833], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7239], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6658], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5104], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5254], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4576], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6286], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5037], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6948], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5619], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5720], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3902], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5075], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6352], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4384], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4402], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6208], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4692], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1.,
        1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4477], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5375], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5798], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3376], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5682], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5488], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4107], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3875], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4925], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5719], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4070], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5288], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4376], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4506], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5642], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5122], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4984], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5097], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5137], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6609], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4302], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4535], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6612], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4055], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4553], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4626], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4118], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6631], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0.,
        0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6952], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5970], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.,
        1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4816], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8094], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5099], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4319], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5337], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3175], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5316], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6518], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3403], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4277], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3710], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1591], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4528], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5567], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2109], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5934], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5409], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4833], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2786], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6277], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2229], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3417], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2336], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2455], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6932], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3590], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3649], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4521], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3210], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3056], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5151], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4355], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6407], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4978], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0.,
        0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3816], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6489], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6686], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3464], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3727], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6834], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1.,
        0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5049], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3385], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5889], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7574], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7718], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7254], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4657], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4010], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6712], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3114], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7127], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1456], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4125], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2110], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5938], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4739], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5907], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7241], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0.,
        0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8146], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5306], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2479], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4306], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5082], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0.,
        1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3923], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7848], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3778], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3044], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5052], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5075], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7524], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4235], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3594], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5458], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1915], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0.,
        0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2724], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1446], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5166], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6976], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3672], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1179], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4807], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4771], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4208], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5788], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1491], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7871], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3743], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9359], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2350], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8319], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4672], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7312], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1551], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6302], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5795], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3603], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6024], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2825], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1114], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1667], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5947], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2977], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2054], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3483], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
Epoch 1/50, Train Loss: 187.8015, Train Accuracy: 0.4930
output:tensor([0.5576], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6444], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2911], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5503], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6448], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7909], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3672], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5743], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8843], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1133], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4618], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4169], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4827], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4338], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5952], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8675], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1821], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4309], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2573], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.9167], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8470], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8082], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5542], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3668], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5441], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3160], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1750], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8301], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7680], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7554], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1267], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4624], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.,
        0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7031], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5950], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7394], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2723], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0.,
        1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7102], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2100], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4878], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7862], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2665], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7589], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7093], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1856], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0.,
        1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4667], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3278], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2946], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6358], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6315], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4631], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5048], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5904], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8225], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7804], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7819], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7966], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6757], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7494], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5624], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1271], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5049], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2184], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8378], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1986], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6112], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4281], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1.,
        1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3964], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2960], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3918], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3367], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8209], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3793], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1211], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1741], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7718], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1671], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4121], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7645], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2067], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1.,
        0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8272], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6151], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5791], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2487], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8078], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7051], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5199], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1848], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5281], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2009], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5503], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3902], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5199], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3340], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7483], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3955], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4332], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6967], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7273], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1.,
        0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3046], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8177], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4015], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7018], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7307], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5457], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4823], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7466], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5123], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4731], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8776], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4883], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3481], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4883], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8664], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.,
        1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2145], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7743], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4972], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1524], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7816], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2075], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4678], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1991], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1.,
        1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5374], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8436], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6507], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3822], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5330], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6383], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3361], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0891], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2904], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0.,
        0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5662], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6061], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3000], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1410], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3429], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6737], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2847], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4468], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8137], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8803], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4213], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6934], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4900], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2577], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9449], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4294], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7753], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7011], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8875], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6594], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5923], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7500], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5942], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3424], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5364], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5874], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6080], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3734], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3765], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6801], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4567], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3696], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5500], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2431], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5663], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2780], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8779], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4067], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5257], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7428], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6118], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7513], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1688], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5625], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6481], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3360], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4753], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5637], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2931], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2390], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5291], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6028], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2586], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8377], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5938], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8618], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2905], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0.,
        1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6105], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.,
        1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5584], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2606], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2666], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4741], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5687], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7714], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4911], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4257], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6059], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6303], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5201], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5122], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3827], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5947], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4290], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4915], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5676], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5898], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4076], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5414], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4988], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3483], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1569], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4544], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1.,
        0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5607], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4322], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5543], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6778], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6721], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2289], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6369], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0.,
        1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6615], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1.,
        1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3955], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7145], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8108], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5394], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5047], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4595], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6435], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5194], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3267], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0.,
        0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4375], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3849], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0.,
        0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7080], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3196], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3067], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7881], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1950], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2827], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4206], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6264], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3289], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4530], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3195], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6807], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7740], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6762], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6746], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2442], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6246], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7541], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5315], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
Epoch 2/50, Train Loss: 180.8470, Train Accuracy: 0.5018
output:tensor([0.2616], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4053], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3854], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5181], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4750], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4774], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0.,
        0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4177], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6392], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1089], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6570], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4998], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7532], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1.,
        0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5199], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6626], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0.,
        1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3772], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4716], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5339], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4752], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5609], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4365], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4947], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3022], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6696], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8654], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6850], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1.,
        0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4634], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6475], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5893], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7758], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2020], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6682], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0.,
        0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8337], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2982], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7598], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5865], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6577], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1.,
        0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4936], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4145], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1569], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8426], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2258], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7466], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2920], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6985], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4832], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8666], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5526], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3752], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7174], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4782], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8406], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5019], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6872], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5496], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6752], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3461], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5865], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6180], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1.,
        1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5159], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7882], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6406], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4327], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1871], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4448], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0.,
        1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1283], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5329], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6082], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3784], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5670], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4734], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.,
        0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2238], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5197], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5084], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4572], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6216], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5951], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2160], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6645], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1341], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0.,
        0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3223], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4275], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7479], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3120], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0.,
        0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6245], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0.,
        0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3897], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5641], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6358], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6009], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5248], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4029], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3320], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7607], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.0461], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0.,
        1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6164], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3988], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5430], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8044], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7692], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2928], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1583], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5019], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6683], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7533], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0.,
        0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5803], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3063], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5987], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6817], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0.,
        1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2368], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7109], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3197], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5369], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1479], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5766], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4778], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6061], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4542], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3163], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6467], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3781], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5241], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7829], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3131], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3417], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6981], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8165], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0.,
        1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2751], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6571], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3444], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3749], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2365], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5485], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
        0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2024], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3818], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5669], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3826], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4358], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3358], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7673], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6353], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6012], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8153], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5864], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6848], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5990], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6954], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3586], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6580], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1.,
        1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7457], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5701], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5143], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0.,
        1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1179], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4889], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1614], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6130], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8421], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3793], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3384], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0.,
        1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8325], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6749], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4812], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3821], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3953], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3767], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7149], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6029], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1797], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7082], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8838], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7637], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8649], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7225], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0474], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8865], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3237], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8536], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8337], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8600], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1.,
        1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6701], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8389], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.9330], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2648], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.1976], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6347], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4596], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9135], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7617], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7965], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.0671], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6939], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3378], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0.,
        0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8056], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5357], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5076], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1.,
        0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3671], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5713], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2560], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5282], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7627], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4194], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7929], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3607], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3019], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7126], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1.,
        0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3805], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1107], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8004], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5904], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6178], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
        1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2747], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9642], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0.,
        0., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.2653], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3150], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8176], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 0.,
        0., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8983], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5155], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4570], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1.,
        1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5652], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1.,
        0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6420], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7727], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7150], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1879], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5058], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3055], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7122], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5938], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8672], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0.,
        1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6589], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5304], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8791], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2075], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0.,
        1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4831], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.5498], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.,
        1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7455], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1.,
        0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.8341], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.8225], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4283], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4810], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7243], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1.,
        1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3479], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8019], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4064], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8347], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7587], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1., 1.,
        0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5845], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6622], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7505], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7793], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4058], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 1.],
       dtype=torch.float64)
Epoch 3/50, Train Loss: 179.4824, Train Accuracy: 0.4873
output:tensor([0.2139], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5710], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.8481], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2694], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2102], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.1614], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5667], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2735], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1847], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5542], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 1.,
        0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.9446], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.9043], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5216], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7034], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 1., 0.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.2122], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.5146], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3870], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.,
        1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1941], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4549], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.4517], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1054], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0.,
        1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7783], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4778], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.6811], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6792], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7086], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 1.],
       dtype=torch.float64)
output:tensor([0.6659], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 1.,
        0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.7972], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.4692], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1.,
        1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.0489], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.1849], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2406], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7407], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3514], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6833], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0.,
        0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7119], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7018], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.2154], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6125], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7417], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8367], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.7687], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.7477], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.4191], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.3963], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.,
        1., 0., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.1358], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1., 0.],
       dtype=torch.float64)
output:tensor([0.8175], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0.,
        1., 1., 0., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1.],
       dtype=torch.float64)
output:tensor([0.3302], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 1.,
        1., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.6340], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        1., 1., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.2413], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 0., 1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0.],
       dtype=torch.float64)
output:tensor([0.5236], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1., 0.,
        1., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.4323], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([1., 1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.6604], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1.],
       dtype=torch.float64)
output:tensor([0.7604], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0.,
        1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1.],
       dtype=torch.float64)
output:tensor([0.3594], grad_fn=<SelectBackward0>)
Prediction:tensor([0.]), Target:tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0.],
       dtype=torch.float64)
output:tensor([0.5560], grad_fn=<SelectBackward0>)
Prediction:tensor([1.]), Target:tensor([1., 0., 1., 0., 0., 0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 0., 1.,
        0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
       dtype=torch.float64)
output:tensor([0.3783], grad_fn=<SelectBackward0>)
